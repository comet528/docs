# Multi-stage: static MUSL build â†’ scratch image

FROM rust:1-alpine AS build
RUN apk add --no-cache musl-dev openssl-dev pkgconfig
WORKDIR /app

# Cache deps
COPY Cargo.toml Cargo.lock ./
RUN mkdir src && echo "fn main(){}" > src/main.rs && \
    rustup target add x86_64-unknown-linux-musl && \
    cargo build --release --target x86_64-unknown-linux-musl && \
    rm -rf src

# Build
COPY src ./src
RUN cargo build --release --target x86_64-unknown-linux-musl && \
    strip target/x86_64-unknown-linux-musl/release/restsvc || true

FROM scratch AS runtime
ENV RUST_LOG=info \
    PORT=8080
USER 10001:10001
WORKDIR /app
COPY --from=build /app/target/x86_64-unknown-linux-musl/release/restsvc /app/restsvc
EXPOSE 8080
ENTRYPOINT ["/app/restsvc"]

